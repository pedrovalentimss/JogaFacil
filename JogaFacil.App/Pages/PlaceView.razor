@page "/places/{Id:int}"
@inject IPlacesService placesService
@inject IReservationService reservationService
@inject IArenasService arenasService
@inject IJSRuntime JSRuntime;
@using Models
@using Services

@if (place == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-sm-12">
            <h3>@place.Name</h3>
            <p>
                <i class="fa fa-fw fa-map-marker-alt"></i>
                @place.Address.Street, @place.Address.Number - @place.Address.City
            </p>
            <p>
                <i class="fa fa-fw fa-phone-alt"></i>
                @place.Phone
            </p>
        </div>
        <div class="col-sm-12">
            <div class="row row-cols-sm-2">
                @foreach (var arena in place.Arenas)
                {
                    <ArenaCard Arena=@arena />
                }
            </div>

            <div class="modal fade" id="modalForm" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
                <EditForm Model="@reservationFormModel" OnValidSubmit="@SaveReservation">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalTitle">Solicitar reserva</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">

                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <label>Quadras:</label>
                                    <select required class="form-control custom-select" @bind="reservationFormModel.ArenaId">
                                        <option value="" disabled selected hidden>Selecione uma quadra...</option>
                                        @foreach (var item in place.Arenas)
                                        {
                                            <option value="@item.Id.ToString()">@item.Name</option>
                                        }
                                    </select>

                                </div>
                                <div class="form-group">
                                    <label>Data da reserva: </label>
                                    <input type="date" class="form-control" min="@DateTime.Now" @bind="reservationFormModel.Date" />
                                </div>
                                <div class="form-group">
                                    <label>Hora da reserva: </label>
                                    <input type="time" class="form-control" @bind="reservationFormModel.Time" />
                                </div>

                            </div>
                            <div class="modal-footer">
                                <div class="d-flex flex-column flex-grow-1 justify-content-end">
                                    <div class="alert alert-success collapse" id="alertSuccess" role="alert">
                                        Reserva solicitada com sucesso!
                                        <br/>
                                        <a href="reservations" class="alert-link">Acompanhe suas reservas aqui</a>.
                                    </div>
                                    <div class="align-self-end">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                        <input type="submit" class="btn btn-primary" value="Solicitar" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
        <div class="fixed-bottom p-3 bg-white">
            <button type="button" class="btn btn-primary btn-block btn-lg" data-toggle="modal" data-target="#modalForm">
                Reservar
            </button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    public ReservationFormModel reservationFormModel { get; set; }

    public Place place { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reservationFormModel = new ReservationFormModel();
        reservationFormModel.Date = DateTime.Now;
        place = await placesService.GetPlace(Id);
    }

    async Task SaveReservation()
    {
        var reservation = new Reservation();
        reservation.CreatedAt = DateTime.Now;
        reservation.StartTime = reservationFormModel.Date.Add(reservationFormModel.Time.TimeOfDay);
        reservation.EndTime = reservation.StartTime.AddHours(1);
        reservation.Place = place;
        reservation.ArenaId = Convert.ToInt32(reservationFormModel.ArenaId);
        reservation.Status = ReservationStatus.WaitingApprovement;
        reservationService.AddReservation(reservation);
        reservationFormModel = new ReservationFormModel();
        reservationFormModel.Date = DateTime.Now;
        await ShowAlert("#alertSuccess", 8000);
    }

    async Task ShowAlert(string elementId, int timeToShow)
    {
        await JSRuntime.InvokeVoidAsync("showAlert", elementId, timeToShow);
    }
}