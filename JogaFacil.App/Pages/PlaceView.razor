@page "/places/{Id:int}"
@inject IPlacesService placesService
@inject IReservationService reservationService
@using Models
@using Services

@if (place == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>@place.Name</h2>

    <h5>Telefone</h5>
    <ul class="list-group">
        <li class="list-group-item">
            @place.Phone
        </li>
    </ul>
    <br />
    <h5>Endereço</h5>
    <ul class="list-group">
        <li class="list-group-item">
            <a class="font-weight-bold">Rua: </a>@place.Address.Street
        </li>
        <li class="list-group-item">
            <a class="font-weight-bold">Nº: </a>@place.Address.Number
        </li>
        <li class="list-group-item">
            <a class="font-weight-bold">Bairro: </a>@place.Address.Neighbourhood
        </li>
        <li class="list-group-item">
            <a class="font-weight-bold">Cidade: </a>@place.Address.City
        </li>
    </ul>

    <EditForm Model="@reservation" OnSubmit="@AddReservation">
        <label>Hora de início: </label>
        <InputDate TValue="DateTime" @bind-Value="reservation.StartTime"></InputDate>
        <label>Hora do término: </label>
        <InputDate TValue="DateTime" @bind-Value="reservation.EndTime"></InputDate>
        <button type="submit" class="btn btn-primary">Solicitar reserva</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Reservation reservation = new Reservation();

    Place place;

    protected override async Task OnInitializedAsync()
    {
        place = await placesService.GetPlace(Id);
    }

    private void AddReservation()
    {
        reservation.Place = place;
        reservation.Status = ReservationStatus.WaitingApprovement;
        reservationService.AddReservation(reservation);
        reservation = new Reservation();
    }
}